/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ShareCodeInfo } from './ShareCodeInfo';
import {
    ShareCodeInfoFromJSON,
    ShareCodeInfoFromJSONTyped,
    ShareCodeInfoToJSON,
} from './ShareCodeInfo';

/**
 * 
 * @export
 * @interface ShareCodeInfoIEnumerableBaseResponse
 */
export interface ShareCodeInfoIEnumerableBaseResponse {
    /**
     * 
     * @type {string}
     * @memberof ShareCodeInfoIEnumerableBaseResponse
     */
    message?: string | null;
    /**
     * 
     * @type {Array<ShareCodeInfo>}
     * @memberof ShareCodeInfoIEnumerableBaseResponse
     */
    data?: Array<ShareCodeInfo> | null;
}

/**
 * Check if a given object implements the ShareCodeInfoIEnumerableBaseResponse interface.
 */
export function instanceOfShareCodeInfoIEnumerableBaseResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ShareCodeInfoIEnumerableBaseResponseFromJSON(json: any): ShareCodeInfoIEnumerableBaseResponse {
    return ShareCodeInfoIEnumerableBaseResponseFromJSONTyped(json, false);
}

export function ShareCodeInfoIEnumerableBaseResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShareCodeInfoIEnumerableBaseResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'message': !exists(json, 'message') ? undefined : json['message'],
        'data': !exists(json, 'data') ? undefined : (json['data'] === null ? null : (json['data'] as Array<any>).map(ShareCodeInfoFromJSON)),
    };
}

export function ShareCodeInfoIEnumerableBaseResponseToJSON(value?: ShareCodeInfoIEnumerableBaseResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'message': value.message,
        'data': value.data === undefined ? undefined : (value.data === null ? null : (value.data as Array<any>).map(ShareCodeInfoToJSON)),
    };
}

