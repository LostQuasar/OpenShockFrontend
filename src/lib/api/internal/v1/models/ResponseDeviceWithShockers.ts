/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ShockerResponse } from './ShockerResponse';
import {
    ShockerResponseFromJSON,
    ShockerResponseFromJSONTyped,
    ShockerResponseToJSON,
} from './ShockerResponse';

/**
 * 
 * @export
 * @interface ResponseDeviceWithShockers
 */
export interface ResponseDeviceWithShockers {
    /**
     * 
     * @type {string}
     * @memberof ResponseDeviceWithShockers
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseDeviceWithShockers
     */
    name?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof ResponseDeviceWithShockers
     */
    createdOn?: Date;
    /**
     * 
     * @type {Array<ShockerResponse>}
     * @memberof ResponseDeviceWithShockers
     */
    shockers?: Array<ShockerResponse> | null;
}

/**
 * Check if a given object implements the ResponseDeviceWithShockers interface.
 */
export function instanceOfResponseDeviceWithShockers(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ResponseDeviceWithShockersFromJSON(json: any): ResponseDeviceWithShockers {
    return ResponseDeviceWithShockersFromJSONTyped(json, false);
}

export function ResponseDeviceWithShockersFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseDeviceWithShockers {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'createdOn': !exists(json, 'createdOn') ? undefined : (new Date(json['createdOn'])),
        'shockers': !exists(json, 'shockers') ? undefined : (json['shockers'] === null ? null : (json['shockers'] as Array<any>).map(ShockerResponseFromJSON)),
    };
}

export function ResponseDeviceWithShockersToJSON(value?: ResponseDeviceWithShockers | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'createdOn': value.createdOn === undefined ? undefined : (value.createdOn.toISOString()),
        'shockers': value.shockers === undefined ? undefined : (value.shockers === null ? null : (value.shockers as Array<any>).map(ShockerResponseToJSON)),
    };
}

