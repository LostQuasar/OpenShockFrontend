/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ShockerPermissions
 */
export interface ShockerPermissions {
    /**
     * 
     * @type {boolean}
     * @memberof ShockerPermissions
     */
    vibrate?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShockerPermissions
     */
    sound?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShockerPermissions
     */
    shock?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShockerPermissions
     */
    live?: boolean;
}

/**
 * Check if a given object implements the ShockerPermissions interface.
 */
export function instanceOfShockerPermissions(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ShockerPermissionsFromJSON(json: any): ShockerPermissions {
    return ShockerPermissionsFromJSONTyped(json, false);
}

export function ShockerPermissionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShockerPermissions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'vibrate': !exists(json, 'vibrate') ? undefined : json['vibrate'],
        'sound': !exists(json, 'sound') ? undefined : json['sound'],
        'shock': !exists(json, 'shock') ? undefined : json['shock'],
        'live': !exists(json, 'live') ? undefined : json['live'],
    };
}

export function ShockerPermissionsToJSON(value?: ShockerPermissions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'vibrate': value.vibrate,
        'sound': value.sound,
        'shock': value.shock,
        'live': value.live,
    };
}

