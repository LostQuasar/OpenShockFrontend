/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MetadataIdentifier } from './MetadataIdentifier';
import {
    MetadataIdentifierFromJSON,
    MetadataIdentifierFromJSONTyped,
    MetadataIdentifierToJSON,
} from './MetadataIdentifier';
import type { PrereleaseIdentifier } from './PrereleaseIdentifier';
import {
    PrereleaseIdentifierFromJSON,
    PrereleaseIdentifierFromJSONTyped,
    PrereleaseIdentifierToJSON,
} from './PrereleaseIdentifier';

/**
 * 
 * @export
 * @interface SemVersion
 */
export interface SemVersion {
    /**
     * 
     * @type {number}
     * @memberof SemVersion
     */
    major?: number;
    /**
     * 
     * @type {number}
     * @memberof SemVersion
     */
    readonly minor?: number;
    /**
     * 
     * @type {number}
     * @memberof SemVersion
     */
    readonly patch?: number;
    /**
     * 
     * @type {string}
     * @memberof SemVersion
     */
    readonly prerelease?: string | null;
    /**
     * 
     * @type {Array<PrereleaseIdentifier>}
     * @memberof SemVersion
     */
    readonly prereleaseIdentifiers?: Array<PrereleaseIdentifier> | null;
    /**
     * 
     * @type {boolean}
     * @memberof SemVersion
     */
    readonly isPrerelease?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SemVersion
     */
    readonly isRelease?: boolean;
    /**
     * 
     * @type {string}
     * @memberof SemVersion
     * @deprecated
     */
    readonly build?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SemVersion
     */
    readonly metadata?: string | null;
    /**
     * 
     * @type {Array<MetadataIdentifier>}
     * @memberof SemVersion
     */
    readonly metadataIdentifiers?: Array<MetadataIdentifier> | null;
}

/**
 * Check if a given object implements the SemVersion interface.
 */
export function instanceOfSemVersion(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SemVersionFromJSON(json: any): SemVersion {
    return SemVersionFromJSONTyped(json, false);
}

export function SemVersionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SemVersion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'major': !exists(json, 'major') ? undefined : json['major'],
        'minor': !exists(json, 'minor') ? undefined : json['minor'],
        'patch': !exists(json, 'patch') ? undefined : json['patch'],
        'prerelease': !exists(json, 'prerelease') ? undefined : json['prerelease'],
        'prereleaseIdentifiers': !exists(json, 'prereleaseIdentifiers') ? undefined : (json['prereleaseIdentifiers'] === null ? null : (json['prereleaseIdentifiers'] as Array<any>).map(PrereleaseIdentifierFromJSON)),
        'isPrerelease': !exists(json, 'isPrerelease') ? undefined : json['isPrerelease'],
        'isRelease': !exists(json, 'isRelease') ? undefined : json['isRelease'],
        'build': !exists(json, 'build') ? undefined : json['build'],
        'metadata': !exists(json, 'metadata') ? undefined : json['metadata'],
        'metadataIdentifiers': !exists(json, 'metadataIdentifiers') ? undefined : (json['metadataIdentifiers'] === null ? null : (json['metadataIdentifiers'] as Array<any>).map(MetadataIdentifierFromJSON)),
    };
}

export function SemVersionToJSON(value?: SemVersion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'major': value.major,
    };
}

