/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MinimalShocker } from './MinimalShocker';
import {
    MinimalShockerFromJSON,
    MinimalShockerFromJSONTyped,
    MinimalShockerToJSON,
} from './MinimalShocker';

/**
 * 
 * @export
 * @interface DeviceSelfResponse
 */
export interface DeviceSelfResponse {
    /**
     * 
     * @type {string}
     * @memberof DeviceSelfResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof DeviceSelfResponse
     */
    name?: string;
    /**
     * 
     * @type {Array<MinimalShocker>}
     * @memberof DeviceSelfResponse
     */
    shockers?: Array<MinimalShocker>;
}

/**
 * Check if a given object implements the DeviceSelfResponse interface.
 */
export function instanceOfDeviceSelfResponse(value: object): boolean {
    return true;
}

export function DeviceSelfResponseFromJSON(json: any): DeviceSelfResponse {
    return DeviceSelfResponseFromJSONTyped(json, false);
}

export function DeviceSelfResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DeviceSelfResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'shockers': json['shockers'] == null ? undefined : ((json['shockers'] as Array<any>).map(MinimalShockerFromJSON)),
    };
}

export function DeviceSelfResponseToJSON(value?: DeviceSelfResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'shockers': value['shockers'] == null ? undefined : ((value['shockers'] as Array<any>).map(MinimalShockerToJSON)),
    };
}

