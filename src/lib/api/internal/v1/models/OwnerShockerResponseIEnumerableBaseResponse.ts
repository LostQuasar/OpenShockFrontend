/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OwnerShockerResponse } from './OwnerShockerResponse';
import {
    OwnerShockerResponseFromJSON,
    OwnerShockerResponseFromJSONTyped,
    OwnerShockerResponseToJSON,
} from './OwnerShockerResponse';

/**
 * 
 * @export
 * @interface OwnerShockerResponseIEnumerableBaseResponse
 */
export interface OwnerShockerResponseIEnumerableBaseResponse {
    /**
     * 
     * @type {string}
     * @memberof OwnerShockerResponseIEnumerableBaseResponse
     */
    message?: string | null;
    /**
     * 
     * @type {Array<OwnerShockerResponse>}
     * @memberof OwnerShockerResponseIEnumerableBaseResponse
     */
    data?: Array<OwnerShockerResponse> | null;
}

/**
 * Check if a given object implements the OwnerShockerResponseIEnumerableBaseResponse interface.
 */
export function instanceOfOwnerShockerResponseIEnumerableBaseResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OwnerShockerResponseIEnumerableBaseResponseFromJSON(json: any): OwnerShockerResponseIEnumerableBaseResponse {
    return OwnerShockerResponseIEnumerableBaseResponseFromJSONTyped(json, false);
}

export function OwnerShockerResponseIEnumerableBaseResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OwnerShockerResponseIEnumerableBaseResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'message': !exists(json, 'message') ? undefined : json['message'],
        'data': !exists(json, 'data') ? undefined : (json['data'] === null ? null : (json['data'] as Array<any>).map(OwnerShockerResponseFromJSON)),
    };
}

export function OwnerShockerResponseIEnumerableBaseResponseToJSON(value?: OwnerShockerResponseIEnumerableBaseResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'message': value.message,
        'data': value.data === undefined ? undefined : (value.data === null ? null : (value.data as Array<any>).map(OwnerShockerResponseToJSON)),
    };
}

