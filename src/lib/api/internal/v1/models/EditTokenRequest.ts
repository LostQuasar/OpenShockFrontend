/* tslint:disable */
/* eslint-disable */
/**
 * OpenShock.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PermissionType } from './PermissionType';
import {
    PermissionTypeFromJSON,
    PermissionTypeFromJSONTyped,
    PermissionTypeToJSON,
} from './PermissionType';

/**
 * 
 * @export
 * @interface EditTokenRequest
 */
export interface EditTokenRequest {
    /**
     * 
     * @type {string}
     * @memberof EditTokenRequest
     */
    name?: string | null;
    /**
     * 
     * @type {Array<PermissionType>}
     * @memberof EditTokenRequest
     */
    permissions?: Array<PermissionType> | null;
}

/**
 * Check if a given object implements the EditTokenRequest interface.
 */
export function instanceOfEditTokenRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EditTokenRequestFromJSON(json: any): EditTokenRequest {
    return EditTokenRequestFromJSONTyped(json, false);
}

export function EditTokenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): EditTokenRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'permissions': !exists(json, 'permissions') ? undefined : (json['permissions'] === null ? null : (json['permissions'] as Array<any>).map(PermissionTypeFromJSON)),
    };
}

export function EditTokenRequestToJSON(value?: EditTokenRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'permissions': value.permissions === undefined ? undefined : (value.permissions === null ? null : (value.permissions as Array<any>).map(PermissionTypeToJSON)),
    };
}

